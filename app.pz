import boto3
import io
import base64
import matplotlib.pyplot as plt
from datetime import datetime, timedelta

# Initialize CloudWatch client
cw = boto3.client('cloudwatch', region_name='us-east-1')

def get_usage_chart(user_id):
    # Query the last 24h of runs for this user from your custom metric (if you push one)
    # Or show DynamoDB reads/writes on the table as a placeholder:
    now = datetime.utcnow()
    start = now - timedelta(hours=24)

    resp = cw.get_metric_data(
        MetricDataQueries=[
            {
                'Id': 'runs',
                'MetricStat': {
                    'Metric': {
                        'Namespace': 'Tweenleaf',
                        'MetricName': 'RunsPerHour',
                        'Dimensions': [{'Name': 'UserId', 'Value': user_id}]
                    },
                    'Period': 3600,
                    'Stat': 'Sum',
                },
                'ReturnData': True,
            },
        ],
        StartTime=start,
        EndTime=now,
    )

    timestamps = resp['MetricDataResults'][0]['Timestamps']
    values     = resp['MetricDataResults'][0]['Values']

    # Plot inline and encode as PNG
    plt.figure()
    plt.plot(timestamps, values)
    plt.title('Runs per Hour (last 24h)')
    plt.xlabel('Time UTC')
    plt.ylabel('Count')
    buf = io.BytesIO()
    plt.savefig(buf, format='png', bbox_inches='tight')
    buf.seek(0)
    chart_b64 = base64.b64encode(buf.read()).decode('ascii')
    plt.close()
    return chart_b64
